#include<stdio.h>
#include<stdlib.h>
void main()
{
    int RQ[100],TotalHeadMovement=0,initial,n,i;
    printf("Enter the no of Requests\n");
    scanf("%d",&n);
    printf("Enter the  Request sequence:\n");
    for(int i=0;i<n;i++)
    {
        scanf("%d",&RQ[i]);
    }
    printf("Enter initial head position\n");
    scanf("%d",&initial);
    
    //Logic for FCFS Scheduling
    
    for(int i=0;i<n;i++)
    
    {
        TotalHeadMovement=TotalHeadMovement+abs(RQ[i]-initial);
        initial=RQ[i];
    }
    printf("\nTotalHeadMovement is %d:",TotalHeadMovement);
}
        
        

OUTPUT:
Enter the no of Requests
8
Enter the  Request sequence:
98 183 37 122 14 124 65 67
Enter initial head position
53

TotalHeadMovement is 640

SCAN:
#include <stdio.h>
int absoluteValue(int x){
    return(x>=0)?x:-x;
}

int main()
{
   int n,max_range,initial,temp,i,j,seek=0;
   int left_count=0,right_count=0;
   int left[100],right[100];
   printf("Enter no of requests\n");
   scanf("%d",&n);
   
   printf("Enter maxrange\n");
   scanf("%d",&max_range);
   
   printf("Enter initial head position\n");
   scanf("%d",&initial);
   
   int arr[n];
   printf("Enter the requests\n");
   for(i=0;i<n;i++)
   {
       scanf("%d",&arr[i]);
   }
   //divide into left and right
  for(i=0;i<n;i++)
  {
      if(arr[i]<initial)
      {
          left[left_count++]=arr[i];
      }
      else
      {
          right[right_count++]=arr[i];
      }
  }
  
 //sort left 
 for(i=0;i<left_count-1;i++)
 {
     for(j=i+1;j<left_count;j++){
      if(left[i]<left[j])
      {
          temp=left[i];
          left[i]=left[j];
          left[j]=temp;
      }
 }}
 
 //sort right in ascending
for(i=0;i<right_count-1;i++)
 {
     for(j=i+1;j<right_count;j++){
      if(right[i]>right[j])
      {
          temp=right[i];
          right[i]=right[j];
          right[j]=temp;
      }
 }}
 //perform calculation
 for(i=0;i<right_count;i++)
 {
    seek+=absoluteValue(initial-right[i]);
    printf("Disk head moves from %d to %d with seektime %d\n",initial,right[i],absoluteValue(initial-right[i]));
    initial=right[i];
 }
    seek+=absoluteValue(initial-max_range);
    printf("Disk head moves from %d to %d with seektime %d\n",initial,max_range,absoluteValue(initial-max_range));
    initial=max_range;

for(i=0;i<left_count;i++)
 {
    seek+=absoluteValue(initial-left[i]);
    printf("Disk head moves from %d to %d with seektime %d\n",initial,left[i],absoluteValue(initial-left[i]));
    initial=left[i];
 }
 
 //total seektime
 printf("Total seek time=%d",seek);
   return 0;
   
}
OUTPUT:
Enter no of requests
8
Enter maxrange
200
Enter initial head position
50
Enter the requests
180 34 119 10 60 70 175 100
Disk head moves from 50 to 60 with seektime 10
Disk head moves from 60 to 70 with seektime 10
Disk head moves from 70 to 100 with seektime 30
Disk head moves from 100 to 119 with seektime 19
Disk head moves from 119 to 175 with seektime 56
Disk head moves from 175 to 180 with seektime 5
Disk head moves from 180 to 200 with seektime 20
Disk head moves from 200 to 34 with seektime 166
Disk head moves from 34 to 10 with seektime 24
Total seek time=340
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
      
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
 
